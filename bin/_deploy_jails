#!/bin/sh

# exit if running already
THISSCRIPT=${0##*/}
if pgrep -lf ${THISSCRIPT} > /dev/null 2> /dev/null ; then
    exit 1
fi

. /usr/local/bin/loadmyvars.sh

if sysctl security.jail.jailed | grep 1 >/dev/null 2>&1; then
    echo "ERROR: Cannot run in a jail"
    exit 1
fi

if ! ifconfig ${IOCNIC} >/dev/null ; then
    ifconfig ${IOCNIC} create
fi

if [ "x" = "x${HOSTNIC}" ]; then
    HOSTNIC="$( net-nic )"
fi

if [ "x" = "x${HOSTIP}" ]; then
    HOSTIP="$( net-ip $HOSTNIC )"
fi

if ! iocage list -r | grep 'RELEASE' >/dev/null 2>/dev/null ; then
    ioc-setup
    if ! iocage list -r | grep 'RELEASE' >/dev/null 2>/dev/null ; then
        echo "ERROR: iocage release doesn't exist, something went wrong."
        exit 1
    fi
fi

GITCLUSTERPATH="$1"

if [ "x" = "x$GITCLUSTERPATH" ]; then
    GITCLUSTERPATH=${HOME}/gitcluster/working
fi

MYHOST=$( hostname -s )
MYDOMAIN=$( hostname -f | sed "s;^$MYHOST\.;;" )

ROLESDIR=$GITCLUSTERPATH/roles/$MYHOST
TMPNEWDIR=/tmp/`whoami`/.newj

if [ -d $ROLESDIR ]; then
    MYROLES=$( ls $ROLESDIR )
fi

apply_myconfig(){
    local i=$1
    local MYINSTALLPREFIX=$2
    if [ -d $GITCLUSTERPATH/$i ]; then
        find $GITCLUSTERPATH/$i -mindepth 1 \
        | sort \
        | while read configpath; do
            INSTALLPATH=$( echo $configpath | sed "s;^$GITCLUSTERPATH/$i;$MYINSTALLPREFIX;" )
            if [ -d $configpath ] && [ ! -e $INSTALLPATH ]; then
                #echo mkdir -p $INSTALLPATH
                     mkdir -p $INSTALLPATH
            elif [ -f $configpath ]; then
                if [ ! -e $INSTALLPATH ] || ! diff $configpath $INSTALLPATH >/dev/null 2>&1 ; then
                    #echo install -C $configpath $INSTALLPATH
                         install -C $configpath $INSTALLPATH
                fi
            fi
        done
    fi
}

apply_config_loop(){
    local DESTDIR=$1
    for template in _base-all $MYROLES $MYDOMAIN $MYHOST ; do
        apply_myconfig $template $DESTDIR
    done
}

env IOCNET="${IOCNET}" HOSTIP="${HOSTIP}" HOSTNIC="${HOSTNIC}" _deploy_pf_ucarp

[ -e $TMPNEWDIR ] && rm -r $TMPNEWDIR
apply_config_loop $TMPNEWDIR

if ls ${TMPNEWDIR}/usr/local/etc/deployjails.conf.d/* >/dev/null 2>&1 ; then
    cat ${TMPNEWDIR}/usr/local/etc/deployjails.conf.d/* \
    | while read num name boot ; do
        case "$num" in "#"*|"") continue; esac
        if [ "x" != "x${num}" ] && [ "x" != "x${name}" ]; then
            if ! iocage get tag ${name} >/dev/null 2>/dev/null; then
                # The following case can be in any order
                case ${name} in
                    smtp)                       _deploy_app ${IOCNET}${num} ${name} ${boot} postfix ;;
                    gitlab)                     _deploy_app ${IOCNET}${num} ${name} ${boot} ${name}_config ;;
                    gogs)                       _deploy_app ${IOCNET}${num} ${name} ${boot} ${name}_src ;;
                    horde)                      _deploy_app ${IOCNET}${num} ${name} ${boot} ${name}webmail ;;
                    nginxnew)                   _deploy_app ${IOCNET}${num} ${name} ${boot} nginx ;;
                    squidnew)                   _deploy_app ${IOCNET}${num} ${name} ${boot} squid ;;
                    *)                          _deploy_app ${IOCNET}${num} ${name} ${boot} ;;
                esac
                #if [ "xsquid" != "x${name}" ]; then
                #    iocage stop ${name}
                #fi
            fi # end of if not jail exists
        fi # end of if [ "x" != "x${num}" ] && [ "x" != "x${name}" ]; then
    done
fi
