#!/bin/sh

# READY

######################################################################
# Script version is yymmdd-HHMMSS in UTC, date -u +%y%m%d-%H%M%S
######################################################################
SCRIPTVERSION=150618-224622

if [ "x" == "x${FQDN}" ]; then
    echo "Please set or export variable FQDN"
    exit 1
fi

if [ "x" == "x${NIC}" ]; then
    NIC="lo1"
    REALNIC=`netstat -nr | grep default | awk '{print $NF}'`
fi

if [ "x" == "x${IPNET}" ]; then
    IPNET="10.7.7."
fi

GOOD="
proxy
couch
owncloud
dtfc
ejabberd
murmur
vnc
gitlab
"

BAD="
baikal
couchdtfc
horde
"

DEV="
echoplexus
gitannex
gogs
phabricator
pydio
"

case ${1} in
    good)
        JAILNAMES="${GOOD}"
        ;;
    bad)
        JAILNAMES="${BAD}"
        ;;
    dev)
        JAILNAMES="${DEV}"
        ;;
    *)
        echo "ERROR: $0 [good|bad|dev]"
        exit 1
        ;;
esac

allowsysvipc() {
    if ! grep 'allow.sysvipc=1' /usr/local/etc/ezjail/${1} >/dev/null ; then
        echo "export jail_${1}_parameters=\"allow.sysvipc=1\"" >>/usr/local/etc/ezjail/${1}
    fi
}

count=0
for i in ${JAILNAMES} ; do
    count=$((count+1))
    if [ ! -e /usr/jails/${i} ]; then
        eza create ${i}        "${NIC}|${IPNET}${count}"
        eza-unlink-basejail ${i}
        eza stop ${i}
        zfs snap tank/ezjail/${i}@10.1-RELEASE-p12
    else
        eza console -f -e "fres" ${i}
        eza console -f -e "pkg update" ${i}
        eza console -f -e "pkg upgrade -y" ${i}
    fi
    # The following case can be in any order
    case ${i} in
        # GOOD JAILNAMES
        proxy)
            tlsconf="/usr/local/etc/nginx/tls.conf"
            proxypass="/usr/local/etc/nginx/proxypass.conf"
            cat >/usr/jails/${i}/usr/local/etc/nginx/sites-enabled/${i} <<EOF
client_max_body_size 0;
upstream couchsources {
    server 10.7.7.2:5984;
}
upstream dtfcsources {
    server 10.7.7.4:8080;
}
upstream owncloudsources {
    server 10.7.7.3:443;
}
upstream gitlabsources {
    server 10.7.7.8:8080;
}
map \$uri \$redirect_uri {
    ~^/explore\$  https://${FQDN}/explore/;
    ~^/users\$    https://${FQDN}/users/;
    ~^/groups\$   https://${FQDN}/groups/;
    ~^/owncloud\$   https://${FQDN}/owncloud/;
    ~^/couch\$    https://${FQDN}/couch/;
    ~^/music\$    https://${FQDN}/music/;
    ~^/wiki\$     https://${FQDN}/wiki/;
    ~^/\$         https://${FQDN}/wiki/;
}
server {
    listen 443 ssl;
    server_name ${FQDN};
    ssl_certificate ssl/ssl.crt;
    ssl_certificate_key ssl/ssl.key;
    include ${tlsconf};
    location ~^/(_session|_replicate|_users) {
        rewrite  /(.*) /\$1 break;
        include ${proxypass};
        proxy_pass http://couchsources;
    }
    location ~^/couch/ {
        rewrite  /couch/(.*) /\$1 break;
        include ${proxypass};
        proxy_pass http://couchsources;
    }
    location / {
        try_files \$uri \$uri/ @redirect-map;
    }
    location @redirect-map {
        if (\$redirect_uri) {
            return 302 \$redirect_uri;
        }
    }
    location  ~^/movies/ {
        rewrite /movies/(.*) /movies/_design/movies/_rewrite/\$1 break;
        include ${proxypass};
        proxy_pass http://couchsources;
    }
    location  ~^/music/ {
        rewrite /music/(.*) /music/_design/music/_rewrite/\$1 break;
        include ${proxypass};
        proxy_pass http://couchsources;
    }
    location  ~^/wiki/ {
        rewrite /wiki/(.*) /wiki/_design/wiki/_rewrite/\$1 break;
        include ${proxypass};
        proxy_pass http://couchsources;
    }

    location  ~^/dtfc/ {
        rewrite /dtfc/(.*) /\$1 break;
        include ${proxypass};
        proxy_pass http://dtfcsources;
    }

    location  ~^/owncloud/ {
        rewrite /owncloud/(.*) /owncloud/\$1 break;
        include ${proxypass};
        proxy_pass http://owncloudsources;
    }

    location  ~^/explore/ {
        rewrite /explore/(.*) /explore/\$1 break;
        include ${proxypass};
        proxy_pass http://gitlabsources;
    }
    location  ~^/users/ {
        rewrite /users/(.*) /users/\$1 break;
        include ${proxypass};
        proxy_pass http://gitlabsources;
    }
    location  ~^/groups/ {
        rewrite /groups/(.*) /groups/\$1 break;
        include ${proxypass};
        proxy_pass http://gitlabsources;
    }
    location  ~^/(.*)/(.*) {
        rewrite /(.*)/(.*) /\$1/\$2 break;
        include ${proxypass};
        proxy_pass http://gitlabsources;
    }
}
EOF
            eza console -f -e "deploy nginx" ${i}
            ;;
        couch)
            eza console -f -e "env FQDN=${FQDN} deploy ${i}db" ${i}
            ;;
        owncloud)
            allowsysvipc ${i}
            eza console -f -e "env FQDN=${FQDN} deploy ${i}" ${i}
            ;;
        dtfc)
            eza console -f -e "env FQDN=${FQDN} deploy ${i}" ${i}
            ;;
        ejabberd)
            eza console -f -e "env FQDN=${FQDN} deploy ${i}" ${i}
            ;;
        murmur)
            eza console -f -e "deploy ${i}" ${i}
            ;;
        vnc)
            eza console -f -e "deploy ${i}" ${i}
            ;;
        gitlab)
            allowsysvipc ${i}
            eza console -f -e "env FQDN=${FQDN} deploy ${i}_src" ${i}
            ;;
        # BAD JAILNAMES
        baikal)
            eza console -f -e "env FQDN=${FQDN} deploy ${i}" ${i}
            ;;
        couchdtfc)
            eza console -f -e "env FQDN=${FQDN} deploy couchdbdtfc" ${i}
            ;;
        horde)
            allowsysvipc ${i}
            eza console -f -e "env FQDN=${FQDN} deploy ${i}webmail" ${i}
            ;;
        # DEV JAILNAMES
        echoplexus)
            eza console -f -e "deploy ${i}" ${i}
            ;;
        gitannex)
            eza console -f -e "deploy ${i}" ${i}
            ;;
        gogs)
            eza console -f -e "deploy ${i}_src" ${i}
            ;;
        phabricator)
            eza console -f -e "deploy ${i}" ${i}
            ;;
        pydio)
            eza console -f -e "deploy ${i}" ${i}
            ;;
    esac
    eza stop ${i}
done
