#!/bin/sh

# READY

######################################################################
# Script version is yymmdd-HHMMSS in UTC, date -u +%y%m%d-%H%M%S
######################################################################
SCRIPTVERSION=150627-090325

if [ "x" == "x${FQDN}" ]; then
    echo "Please set or export variable FQDN"
    exit 1
fi

if [ "x" == "x${SQUID}" ]; then
    echo "Please set or export variable SQUID to a LAN IP. Default is 10.7.7.1:3128"
    exit 1
fi

if [ "x" == "x${REPOSRC}" ]; then
    REPOSRC=https://github.com/
fi

if [ "x" == "x${GITLABSRC}" ]; then
    GITLABSRC=https://gitlab.com/
fi

if [ "x" == "x${NIC}" ]; then
    NIC="lo1"
    if ! ifconfig ${NIC} >/dev/null ; then
        ifconfig ${NIC} create
    fi
fi

if [ "x" == "x${IPNET}" ]; then
    IPNET="10.7.7."
fi

if [ "x" == "x${HOSTIP}" ]; then
    HOSTIP=`ifconfig | grep -v 0xffffffff | grep -v 127.0.0.1 | egrep -o 'inet *([0-9]{1,3}\.){1,3}[0-9]{1,3}' | awk '{print $2}'`
fi

if [ "x" == "x${HOSTNIC}" ]; then
    HOSTNIC=`netstat -nr | grep default | awk '{print $NF}'`
fi

if ! zfs list tank >/dev/null ; then
    fzg -i -D
fi

if ! zfs list tank/ezjail >/dev/null ; then
    eza install -h file:///boot/../10.1-RELEASE
    eza-update
fi

if [ "x" == "x${STARTCOUNT}" ]; then
    # remove anything that's not a digit
    count=`echo ${STARTCOUNT} | sed 's/[^[:digit:]]//g'`
fi

if [ "x" == "x${count}" ]; then
    count=0
fi

GOOD="
     1  squid
     2  nginx
     3  couch
     4  dtfc
     5  piwik
     6  owncloud
     7  ejabberd
     8  murmur
     9  vnc
    10  gitlab
"

DEV="
    11  monit
    12  zabbix
    13  minidlna
    14  firefly
    15  echoplexus
    16  gitannex
    17  gogs
    18  phabricator
    19  pydio
"

BAD="
    30  baikal
    31  couchdtfc
    32  horde
"



setuppf() {
    pfanchorfile="/etc/pf/jails.anchor"
    cat >${pfanchorfile} <<EOF
    nat pass on ${HOSTNIC} inet from ${IPNET}0/24 to any -> ${HOSTIP}
EOF
    if [ "x" == "x${SQUIDIPALIAS}" ]; then
        SQUIDIPALIAS="-"
    fi
    if [ "x" == "x${WEBIPALIAS}" ]; then
        WEBIPALIAS="-"
    fi
    if [ "x" == "x${XMPPIPALIAS}" ]; then
        XMPPIPALIAS="-"
    fi
    if [ "x" == "x${MURMURIPALIAS}" ]; then
        MURMURIPALIAS="-"
    fi
    # name alias pubport realport
    ALIASES="
        squid     ${SQUIDIPALIAS}     3127    3127
        squid     ${SQUIDIPALIAS}     3128    3128
        nginx     ${WEBIPALIAS}         80      80
        nginx     ${WEBIPALIAS}        443     443
        gitlab    ${WEBIPALIAS}         23      23
        ejabberd  ${XMPPIPALIAS}      5222    5222
        murmur    ${MURMURIPALIAS}   64738   64738
"
    echo "$ALIASES" \
    | while read namepf ipalias pubport realport ; do
        echo "${namepf} ${ipalias} ${pubport} ${realport}"
        if [ "x-" != "x${ipalias}" ] && [ "x" != "x${ipalias}" ] \
            && [ "x" != "x${namepf}" ] && [ "x" != "x${pubport}" ] \
            && [ "x" != "x${realport}" ]; then
                cat >>${pfanchorfile} <<EOF
rdr pass on ${HOSTNIC} inet proto tcp from any to ${HOSTIP}  port = ${pubport} -> ${IPNET}`jailip ${namepf}` port ${realport}
rdr pass on ${HOSTNIC} inet proto tcp from any to ${ipalias} port = ${pubport} -> ${IPNET}`jailip ${namepf}` port ${realport}
EOF
                cat /usr/local/etc/rc.d/ucarp | sed "s;ucarp;ucarp${namepf};g" \
                    | tr '~' "\n" >/usr/local/etc/rc.d/ucarp${namepf}
                chmod 755 /usr/local/etc/rc.d/ucarp${namepf}
                if [ ! -e /usr/local/sbin/ucarp${namepf} ]; then
                    ln /usr/local/sbin/ucarp /usr/local/sbin/ucarp${namepf}
                fi
                if [ ! -e /etc/rc.conf.d/ucarp${namepf} ]; then
                    cat | sed "s/ucarp_/ucarp${namepf}_/g" >>/etc/rc.conf.d/ucarp${namepf} <<EOF
ucarp_enable="YES"
ucarp_addr="${ipalias}"
ucarp_if="${HOSTNIC}"
ucarp_src="${HOSTIP}"
ucarp_upscript="/usr/local/sbin/ucarp-up"
ucarp_downscript="/usr/local/sbin/ucarp-down"
ucarp_pass="${namepf}"
# ucarp_passfile="/usr/local/etc/ucarp${namepf}password"
# primary   ucarp_preempt="YES"
# primary   ucarp_advskew="100"
# secondary ucarp_advskew="200"
EOF
                fi
                /etc/rc.conf.d/ucarp${namepf} start
        fi
    done
    pf-anchor clear jails
    pf-anchor load jails
}

jailip() {
    # omit ${BAD}
    JAILDATASET="${GOOD} ${DEV} ${BAD}"
    echo "$JAILDATASET" \
        | while read numji nameji ; do
            if [ "x" != "x${numji}" ] && [ "x" != "x${nameji}" ]; then
                #echo "search:${1}, name:${name}"
                if [ "x${1}" == "x${nameji}" ]; then
                    RESULT=$(( count + numji ))
                    #echo "match ${num}, result ${RESULT}"
                    echo "${RESULT}"
                fi
            fi
        done
}

setupnginxconfig() {
    local name=${1}
    local FQDN=${2}
    couchdatabases="movies music wiki"
    gitlabpaths="admin assets dashboard explore groups help profile projects s snippets u users"
    tlsconf="/usr/local/etc/nginx/tls.conf"
    proxypass="/usr/local/etc/nginx/proxypass.conf"
    cat >/usr/jails/${name}/usr/local/etc/nginx/sites-enabled/${name} <<EOF
        client_max_body_size 0;
        upstream couchsources {
            server ${IPNET}`jailip couch`:5984;
        }
        upstream dtfcsources {
            server ${IPNET}`jailip dtfc`:8080;
        }
        upstream owncloudsources {
            server ${IPNET}`jailip owncloud`:443;
        }
        upstream gitlabsources {
            server ${IPNET}`jailip gitlab`:8080;
        }
        map \$uri \$redirect_uri {
            ~^/owncloud\$ https://${FQDN}/owncloud/;
            ~^/couch\$    https://${FQDN}/couch/;
EOF
        for c in ${couchdatabases} ; do
            cat >>/usr/jails/${name}/usr/local/etc/nginx/sites-enabled/${name} <<EOF
            ~^/${c}\$   https://${FQDN}/${c}/;
EOF
        done
        cat >>/usr/jails/${name}/usr/local/etc/nginx/sites-enabled/${name} <<EOF
            ~^/\$         https://${FQDN}/explore;
        }
        server {
            listen   ${IPNET}`jailip nginx`:80 default_server;
            server_name ${FQDN};
            server_name ${IPNET}`jailip nginx`;
            return 302 https://$host$request_uri;
        }
        server {
            listen 443 ssl;
            server_name ${FQDN};
            ssl_certificate ssl/ssl.crt;
            ssl_certificate_key ssl/ssl.key;
            include ${tlsconf};
            location ~^/(_session|_replicate|_users) {
                rewrite  /(.*) /\$1 break;
                include ${proxypass};
                proxy_pass http://couchsources;
            }
            location ~^/couch/ {
                rewrite  /couch/(.*) /\$1 break;
                include ${proxypass};
                proxy_pass http://couchsources;
            }
            location  ~^/dtfc/ {
                rewrite /dtfc/(.*) /\$1 break;
                include ${proxypass};
                proxy_pass http://dtfcsources;
            }
            location  ~^/owncloud/ {
                rewrite /owncloud/(.*) /owncloud/\$1 break;
                include ${proxypass};
                proxy_pass https://owncloudsources;
            }
            location / {
                try_files \$uri \$uri/ @redirect-map;
            }
            location @redirect-map {
                if (\$redirect_uri) {
                    return 302 \$redirect_uri;
                }
            }
EOF
            for c in ${couchdatabases} ; do
                cat >>/usr/jails/${name}/usr/local/etc/nginx/sites-enabled/${name} <<EOF
            location  ~^/${c}/ {
                rewrite /${c}/(.*) /${c}/_design/${c}/_rewrite/\$1 break;
                include ${proxypass};
                proxy_pass http://couchsources;
            }
EOF
            done
            for g in ${gitlabpaths} ; do
                cat >>/usr/jails/${name}/usr/local/etc/nginx/sites-enabled/${name} <<EOF
            location  ~^/${g}/ {
                rewrite /${g}/(.*) /${g}/\$1 break;
                include ${proxypass};
                proxy_pass http://gitlabsources;
            }
            location  ~^/${g}\$ {
                rewrite /${g} /${g} break;
                include ${proxypass};
                proxy_pass http://gitlabsources;
            }
EOF
            done
            cat >>/usr/jails/${name}/usr/local/etc/nginx/sites-enabled/${name} <<EOF
            #letfover slashes or more to gitlab
            location  ~^/(.*)/(.*) {
                rewrite /(.*)/(.*) /\$1/\$2 break;
                include ${proxypass};
                proxy_pass http://gitlabsources;
            }
        }
EOF
}

case ${1} in
    good)
        JAILNAMES="${GOOD}"
        ;;
    bad)
        JAILNAMES="${BAD}"
        ;;
    dev)
        JAILNAMES="${DEV}"
        ;;
    nginx)
        setuppf
        setupnginxconfig nginx ${FQDN}
        exit
        ;;
    *)
        echo "ERROR: $0 [good|bad|dev|nginx]"
        exit 1
        ;;
esac

allowsysvipc() {
    if ! grep 'allow.sysvipc=1' /usr/local/etc/ezjail/${1} >/dev/null ; then
        echo "export jail_${1}_parameters=\"allow.sysvipc=1\"" >>/usr/local/etc/ezjail/${1}
    fi
}

copysslselfcert() {
    if [ "x" != "x${SQUIDIPALIAS}" ]; then
        if ifconfig | grep ${SQUIDIPALIAS} >/dev/null ; then
            cat /usr/jails/squid/usr/local/etc/squid/public.pem >>/usr/jails/${1}/usr/local/share/certs/ca-root-nss.crt
        else
            fetch -o /usr/jails/${1}/root/public-${SQUIDIPALIAS}.pem http://${SQUIDIPALIAS}:3127/public.pem
            cat      /usr/jails/${1}/root/public-${SQUIDIPALIAS}.pem >>/usr/jails/${1}/usr/local/share/certs/ca-root-nss.crt
        fi
    else
        cat /usr/jails/squid/usr/local/etc/squid/public.pem >>/usr/jails/${1}/usr/local/share/certs/ca-root-nss.crt
    fi
}



setuppf

echo "$JAILNAMES" \
    | while read num name ; do
    if [ "x" != "x${num}" ] && [ "x" != "x${name}" ]; then
        if [ ! -e /usr/jails/${name} ]; then
            echo "Creating: ${num} ${name}"
            eza create ${name}        "${NIC}|${IPNET}${num}"
            env SQUID=${SQUID} REPOSRC=${REPOSRC} eza-unlink-basejail ${name}
            eza stop ${name}
            zfs snap tank/ezjail/${name}@10.1-RELEASE-p12
        else
            echo "Updating: ${num} ${name}"
            eza console -f -e "env REPOSRC=${REPOSRC} fres" ${name}
            if [ "squid" != "${name}" ]; then
                eza console -f -e "pkg update" ${name}
                eza console -f -e "pkg upgrade -y" ${name}
            fi
        fi
    fi
    # The following case can be in any order
    case ${name} in
        # GOOD JAILNAMES
        squid)
            # based on https://forums.freebsd.org/threads/transparent-proxy-in-jail-with-pf-in-host.42075/
            cat >>/etc/devfs.rules <<EOF
[devfsrules_jail=4]
add include \$devfsrules_hide_all
add include \$devfsrules_unhide_basic
add include \$devfsrules_unhide_login
add path zfs unhide
add path pf unhide mode 0640 group 100
EOF
            if [ -e /var/ports ]; then
                rsync -viaP --exclude work /var/ports/ /usr/jails/${name}/var/ports/
            fi
            eza console -f -e "deploy ${name}" ${name}
            rsync -viaP --exclude work /usr/jails/${name}/var/ports/ /var/ports/
            # easydns-client here to reduce risk of lost/rollbacked config
            eza console -f -e "deploy easydnsclient" ${name}
            # 3127 for public.pem
            cat >/usr/jails/${name}/usr/local/etc/nginx/sites-enabled/${name} <<EOF
                server {
                    listen   ${IPNET}`jailip squid`:3127 default_server;
                    server_name ${IPNET}`jailip squid`;
                    location =/public.pem {
                        alias /usr/local/etc/squid/public.pem;
                    }
                    location =/public.pac {
                        alias /usr/local/etc/squid/public.pac;
                    }
                }
EOF
            eza console -f -e "deploy nginx" ${name}
            eza console -f -e sh ${name} <<EOF
su urep -c "/bin/mkdir -p /usr/home/urep/bin"
cp -a /root/bin/fres /usr/home/urep/bin/fres
chown urep /usr/home/urep/bin/fres
su urep -c "/usr/home/urep/bin/fres"
su urep -c "/usr/home/urep/bin/deploy easydnsclient"
EOF
            ;;
        nginx)
            setupnginxconfig ${name} ${FQDN}
            eza console -f -e "deploy ${name}" ${name}
            ;;
        couch)
            eza console -f -e "env FQDN=${FQDN} deploy ${name}db" ${name}
            ;;
        owncloud)
            allowsysvipc ${name}
            eza console -f -e "env FQDN=${FQDN} deploy ${name}" ${name}
            ;;
        dtfc)
            eza console -f -e "env FQDN=${FQDN} REPOSRC=${REPOSRC} deploy ${name}" ${name}
            ;;
        ejabberd)
            eza console -f -e "env FQDN=${FQDN} deploy ${name}" ${name}
            ;;
        murmur)
            eza console -f -e "deploy ${name}" ${name}
            ;;
        vnc)
            eza console -f -e "deploy ${name}" ${name}
            ;;
        gitlab)
            allowsysvipc ${name}
            copysslselfcert ${name}
            eza console -f -e "env FQDN=${FQDN} GITLABSRC=${GITLABSRC} HTTP_PROXY=http://${SQUID} deploy ${name}_src" ${name}
            ;;
        # BAD JAILNAMES
        baikal)
            eza console -f -e "env FQDN=${FQDN} deploy ${name}" ${name}
            ;;
        couchdtfc)
            eza console -f -e "env FQDN=${FQDN} REPOSRC=${REPOSRC} deploy couchdbdtfc" ${name}
            ;;
        horde)
            allowsysvipc ${name}
            eza console -f -e "env FQDN=${FQDN} deploy ${name}webmail" ${name}
            ;;
        # DEV JAILNAMES
        echoplexus)
            eza console -f -e "env REPOSRC=${REPOSRC} deploy ${name}" ${name}
            ;;
        gitannex)
            eza console -f -e "deploy ${name}" ${name}
            ;;
        gogs)
            eza console -f -e "deploy ${name}_src" ${name}
            ;;
        phabricator)
            eza console -f -e "deploy ${name}" ${name}
            ;;
        pydio)
            eza console -f -e "deploy ${name}" ${name}
            ;;
    esac
    if [ "xsquid" != "x${name}" ]; then
        eza stop ${name}
    fi
done
