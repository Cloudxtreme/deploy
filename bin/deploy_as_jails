#!/bin/sh

# READY

if sysctl security.jail.jailed | grep 1 >/dev/null 2>&1; then
    echo "ERROR: Cannot run in a jail"
    exit 1
fi

if [ "x" == "x${FQDN}" ]; then
    echo "Please set or export variable FQDN"
    exit 1
fi

if [ "x" == "x${SQUID}" ]; then
    echo "Please set or export variable SQUID to a LAN IP. Default is 10.7.7.1:3128"
    exit 1
fi

if [ "x" == "x${REPOSRC}" ]; then
    REPOSRC=https://github.com/
fi

if [ "x" == "x${GITLABSRC}" ]; then
    GITLABSRC=https://gitlab.com/
fi

if [ "x" == "x${NIC}" ]; then
    NIC="lo1"
    if ! ifconfig ${NIC} >/dev/null ; then
        ifconfig ${NIC} create
    fi
fi

if [ "x" == "x${IPNET}" ]; then
    IPNET="10.7.7."
fi

if [ "x" == "x${HOSTIP}" ]; then
    HOSTIP="$( net-ip )"
fi

if [ "x" == "x${HOSTNIC}" ]; then
    HOSTNIC="$( net-nic )"
fi

if ! zfs list tank/ezjail >/dev/null ; then
    eza install -h file:///boot/../10.1-RELEASE
    if ! zfs list tank/ezjail >/dev/null ; then
        echo "ERROR: tank/ezjail doesn't exist, something went wrong"
        exit 1
    fi
    eza-update
fi

if [ "x" != "x${STARTCOUNT}" ]; then
    # remove anything that's not a digit
    count=`echo ${STARTCOUNT} | sed 's/[^[:digit:]]//g'`
fi

if [ "x" == "x${count}" ]; then
    count=0
fi

. ~/bin/deploy_as_conf



jailip() {
    local name
    local num
    JAILDATASET="${JAILSGOOD} ${JAILSDEV} ${JAILSBAD}"
    echo "$JAILDATASET" \
        | while read num name ; do
            if [ "x" != "x${num}" ] && [ "x" != "x${name}" ]; then
                #echo "debug: search ${1}, name ${name}"
                if [ "x${1}" == "x${name}" ]; then
                    RESULT=$(( count + num ))
                    #echo "debug: match ${num}, result ${RESULT}"
                    echo "${RESULT}"
                fi
            fi
        done
}

setupnginxconfig() {
    local name=${1}
    local FQDN=${2}
    local NGINXJAILIP=${IPNET}`jailip nginx`
    cat ~/git/deploy/usr/local/etc/nginx/sites-available/nginx-all \
        | sed "s/0.0.0.0/${NGINXJAILIP}/" \
        | sed "s/localhost.localdomain/${FQDN}/" \
        >/usr/jails/${name}/usr/local/etc/nginx/sites-enabled/${name}
    chmod 644 /usr/jails/${name}/usr/local/etc/nginx/sites-enabled/${name}
}

case ${1} in
    good)
        JAILNAMES="${JAILSGOOD}"
        ;;
    bad)
        JAILNAMES="${JAILSBAD}"
        ;;
    dev)
        JAILNAMES="${JAILSDEV}"
        ;;
    nginx)
        env IPNET="${IPNET}" HOSTIP="${HOSTIP}" HOSTNIC="${HOSTNIC}" deploy_pfjails_ucarp
        setupnginxconfig nginx ${FQDN}
        exit
        ;;
    *)
        echo "ERROR: $0 [good|bad|dev|nginx]"
        exit 1
        ;;
esac

allowsysvipc() {
    if ! grep 'allow.sysvipc=1' /usr/local/etc/ezjail/${1} >/dev/null ; then
        echo "export jail_${1}_parameters=\"allow.sysvipc=1\"" >>/usr/local/etc/ezjail/${1}
    fi
}

copysslselfcert() {
    if [ "x" != "x${SQUIDIPALIAS}" ]; then
        if ifconfig | grep ${SQUIDIPALIAS} >/dev/null ; then
            cat /usr/jails/squid/usr/local/etc/squid/public.pem >>/usr/jails/${1}/usr/local/share/certs/ca-root-nss.crt
        else
            curl --output /usr/jails/${1}/root/public-${SQUIDIPALIAS}.pem http://${SQUIDIPALIAS}:3127/public.pem
            cat           /usr/jails/${1}/root/public-${SQUIDIPALIAS}.pem >>/usr/jails/${1}/usr/local/share/certs/ca-root-nss.crt
        fi
    else
        cat /usr/jails/squid/usr/local/etc/squid/public.pem >>/usr/jails/${1}/usr/local/share/certs/ca-root-nss.crt
    fi
}



env IPNET="${IPNET}" HOSTIP="${HOSTIP}" HOSTNIC="${HOSTNIC}" deploy_pfjails_ucarp

echo "$JAILNAMES" \
    | while read num name ; do
    if [ "x" != "x${num}" ] && [ "x" != "x${name}" ]; then
        if [ ! -e /usr/jails/${name} ]; then
            echo "Creating: ${num} ${name}"
            eza create ${name}        "${NIC}|${IPNET}${num}"
            env SQUID=${SQUID} REPOSRC=${REPOSRC} eza-unlink-basejail ${name}
            # this extra fres for pkglist
            eza console -f -e "env REPOSRC=${REPOSRC} fres" ${name}
            eza stop ${name}
            zfs snap tank/ezjail/${name}@created
            # The following case can be in any order
            case ${name} in
                # GOOD JAILNAMES
                squid)
                    # based on https://forums.freebsd.org/threads/transparent-proxy-in-jail-with-pf-in-host.42075/
#                cat >>/etc/devfs.rules <<EOF
#[devfsrules_jail=4]
#add include \$devfsrules_hide_all
#add include \$devfsrules_unhide_basic
#add include \$devfsrules_unhide_login
#add path zfs unhide
#add path pf unhide mode 0640 group 100
#EOF
                    if [ -e /var/ports ]; then
                        rsync -viaP --exclude work /var/ports/ /usr/jails/${name}/var/ports/
                    fi
                    eza console -f -e "deploy ${name}" ${name}
                    rsync -viaP --exclude work /usr/jails/${name}/var/ports/ /var/ports/
                    # easydns-client here to reduce risk of lost/rollbacked config
                    eza console -f -e "deploy easydnsclient" ${name}
                    eza console -f -e sh ${name} <<EOF
su urep -c "/bin/mkdir -p /usr/home/urep/bin"
cp -a /root/bin/fres /usr/home/urep/bin/fres
chown urep /usr/home/urep/bin/fres
su urep -c "/usr/home/urep/bin/fres"
su urep -c "/usr/home/urep/bin/deploy easydnsclient"
EOF
                    ;;
                nginx)
                    setupnginxconfig ${name} ${FQDN}
                    eza console -f -e "deploy ${name}" ${name}
                    ;;
                couch)
                    eza console -f -e "env FQDN=${FQDN} deploy ${name}db" ${name}
                    ;;
                dtfc)
                    eza console -f -e "env FQDN=${FQDN} REPOSRC=${REPOSRC} deploy ${name}" ${name}
                    ;;
                piwik)
                    eza console -f -e "env FQDN=${FQDN} deploy ${name}" ${name}
                    ;;
                owncloud)
                    if [         -d /root/local/owncloud ]; then
                        mkdir -p                          /usr/jails/${name}/root/local/owncloud
                        rsync -qalP /root/local/owncloud/ /usr/jails/${name}/root/local/owncloud/
                    fi
                    allowsysvipc ${name}
                    eza console -f -e "env FQDN=${FQDN} deploy ${name}" ${name}
                    rsync -qalP /usr/jails/${name}/root/local/owncloud/ /root/local/owncloud/
                    ;;
                ejabberd)
                    eza console -f -e "env FQDN=${FQDN} deploy ${name}" ${name}
                    ;;
                murmur)
                    eza console -f -e "deploy ${name}" ${name}
                    ;;
                vnc)
                    eza console -f -e "deploy ${name}" ${name}
                    ;;
                klaus)
                    eza console -f -e "env FQDN=${FQDN} deploy ${name}" ${name}
                    ;;
                gitlab)
                    if [ -e /var/ports ]; then
                        rsync -viaP --exclude work /var/ports/ /usr/jails/${name}/var/ports/
                    fi
                    allowsysvipc ${name}
                    copysslselfcert ${name}
                    if ifconfig | grep ${WEBIPALIAS} >/dev/null ; then
                        # Set jailip nginx as FQDN
                        grep -v " ${FQDN}" /usr/jails/${name}/etc/hosts >/usr/jails/${name}/etc/hosts.tmp
                        cat /usr/jails/${name}/etc/hosts.tmp >/usr/jails/${name}/etc/hosts
                        echo "${IPNET}`jailip gitlab` ${FQDN}" >>/usr/jails/${name}/etc/hosts
                        rm  /usr/jails/${name}/etc/hosts.tmp
                    fi
                    eza console -f -e "env FQDN=${FQDN} HTTP_PROXY=http://${SQUID} deploy ${name}_src" ${name}
                    ;;
                builder)
                    if [ -e /var/ports ]; then
                        rsync -viaP --exclude work /var/ports/ /usr/jails/${name}/var/ports/
                    fi
                    eza console -f -e "psnap" ${name}
                    zfs snap tank/ezjail/${name}@psnap
                    eza console -f -e "deploy ffmpeg" ${name}
                    rsync -viaP --exclude work /usr/jails/${name}/var/ports/ /var/ports/
#                    eza stop ${name}
#                    zfs rollback tank/ezjail/${name}@psnap
#                    eza console -f -e "deploy gitlab_ports" ${name}
#                    rsync -viaP --exclude work /usr/jails/${name}/var/ports/ /var/ports/
                    ;;
                # DEV JAILNAMES
                monit)
                    eza console -f -e "deploy ${name}" ${name}
                    ;;
                zabbix)
                    eza console -f -e "deploy ${name}" ${name}
                    ;;
                echoplexus)
                    eza console -f -e "env REPOSRC=${REPOSRC} deploy ${name}" ${name}
                    ;;
                gitannex)
                    eza console -f -e "deploy ${name}" ${name}
                    ;;
                gogs)
                    eza console -f -e "deploy ${name}_src" ${name}
                    ;;
                phabricator)
                    eza console -f -e "deploy ${name}" ${name}
                    ;;
                pydio)
                    eza console -f -e "deploy ${name}" ${name}
                    ;;
                # BAD JAILNAMES
                baikal)
                    eza console -f -e "env FQDN=${FQDN} deploy ${name}" ${name}
                    ;;
                couchdtfc)
                    eza console -f -e "env FQDN=${FQDN} REPOSRC=${REPOSRC} deploy couchdbdtfc" ${name}
                    ;;
                horde)
                    allowsysvipc ${name}
                    eza console -f -e "env FQDN=${FQDN} deploy ${name}webmail" ${name}
                    ;;
            esac
            if [ "xsquid" != "x${name}" ]; then
                eza stop ${name}
            fi
        fi # end of if not jail exists
    fi # end of if [ "x" != "x${num}" ] && [ "x" != "x${name}" ]; then
done
