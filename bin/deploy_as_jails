#!/bin/sh

# READY

######################################################################
# Script version is yymmdd-HHMMSS in UTC, date -u +%y%m%d-%H%M%S
######################################################################
SCRIPTVERSION=150709-011248

if [ "x" == "x${FQDN}" ]; then
    echo "Please set or export variable FQDN"
    exit 1
fi

if [ "x" == "x${SQUID}" ]; then
    echo "Please set or export variable SQUID to a LAN IP. Default is 10.7.7.1:3128"
    exit 1
fi

if [ "x" == "x${REPOSRC}" ]; then
    REPOSRC=https://github.com/
fi

if [ "x" == "x${GITLABSRC}" ]; then
    GITLABSRC=https://gitlab.com/
fi

if [ "x" == "x${NIC}" ]; then
    NIC="lo1"
    if ! ifconfig ${NIC} >/dev/null ; then
        ifconfig ${NIC} create
    fi
fi

if [ "x" == "x${IPNET}" ]; then
    IPNET="10.7.7."
fi

if [ "x" == "x${HOSTIP}" ]; then
    HOSTIP=`ifconfig | grep -v 0xffffffff | grep -v 127.0.0.1 | egrep -o 'inet *([0-9]{1,3}\.){1,3}[0-9]{1,3}' | awk '{print $2}'`
fi

if [ "x" == "x${HOSTNIC}" ]; then
    HOSTNIC=`netstat -nr | grep default | awk '{print $NF}'`
fi

if ! zfs list tank >/dev/null ; then
    fzg -i -D
fi

if ! zfs list tank/ezjail >/dev/null ; then
    eza install -h file:///boot/../10.1-RELEASE
    eza-update
fi

if [ "x" == "x${STARTCOUNT}" ]; then
    # remove anything that's not a digit
    count=`echo ${STARTCOUNT} | sed 's/[^[:digit:]]//g'`
fi

if [ "x" == "x${count}" ]; then
    count=0
fi

. ~/bin/deploy_conf_jails



setuppf() {
    local name
    cat >/etc/pf/jails.anchor <<EOF
    nat pass on ${HOSTNIC} inet from ${IPNET}0/24 to any -> ${HOSTIP}
EOF
    if [ "x" == "x${SQUIDIPALIAS}" ]; then
        SQUIDIPALIAS=0
    fi
    if [ "x" == "x${WEBIPALIAS}" ]; then
        WEBIPALIAS=0
    fi
    if [ "x" == "x${POSTFIXIPALIAS}" ]; then
        POSTFIXIPALIAS=0
    fi
    if [ "x" == "x${DOVECOTIPALIAS}" ]; then
        DOVECOTIPALIAS=0
    fi
    if [ "x" == "x${XMPPIPALIAS}" ]; then
        XMPPIPALIAS=0
    fi
    if [ "x" == "x${MURMURIPALIAS}" ]; then
        MURMURIPALIAS=0
    fi
    if [ "x" == "x${MONITIPALIAS}" ]; then
        MONITIPALIAS=0
    fi
    if [ "x" == "x${ZABBIXIPALIAS}" ]; then
        ZABBIXIPALIAS=0
    fi
    if [ "x" == "x${MINIDLNAIPALIAS}" ]; then
        MINIDLNAIPALIAS=0
    fi
    if [ "x" == "x${FIREFLYIPALIAS}" ]; then
        FIREFLYIPALIAS=0
    fi
    # name alias pubport realport ucarp
    ALIASES="
    squid     ${SQUIDIPALIAS}     3127    3127  u
    squid     ${SQUIDIPALIAS}     3128    3128  .
    nginx     ${WEBIPALIAS}         80      80  u
    nginx     ${WEBIPALIAS}        443     443  .
    gitlab    ${WEBIPALIAS}         23      23  .
    postfix   ${POSTFIXIPALIAS}    587     587  u
    dovecot   ${DOVECOTIPALIAS}    993     993  u
    ejabberd  ${XMPPIPALIAS}      5222    5222  u
    murmur    ${MURMURIPALIAS}   64738   64738  u
    monit     ${MONITIPALIAS}     2812    2812  u
    zabbix    ${ZABBIXIPALIAS}   10050   10050  u
    zabbix    ${ZABBIXIPALIAS}   10051   10051  .
    minidlna  ${MINIDLNAIPALIAS}  1900    1900  u
    minidlna  239.255.255.250     1900    1900  .
    minidlna  ${MINIDLNAIPALIAS}  8200    8200  .
    firefly   ${FIREFLYIPALIAS}   3689    3689  u
"
    echo "$ALIASES" \
    | while read name ipalias pubport realport doucarp ; do
        #echo "debug ${name} ${ipalias} ${pubport} ${realport}"
        if [ "x0" != "x${ipalias}" ] && [ "x" != "x${ipalias}" ] \
        && [ "x" != "x${name}" ] && [ "x" != "x${pubport}" ] \
        && [ "x" != "x${realport}" ] && [ "x" != "x${doucarp}" ]; then
            if  ! cat /etc/pf/jails.anchor | grep "rdr pass on ${HOSTNIC} inet proto tcp from any to ${HOSTIP} port = ${pubport} " >/dev/null ; then
                cat >>/etc/pf/jails.anchor <<EOF
rdr pass on ${HOSTNIC} inet proto { tcp, udp } from any to ${HOSTIP} port = ${pubport} -> ${IPNET}`jailip ${name}` port ${realport}
rdr pass on ${HOSTNIC} inet proto { tcp, udp } from any to ${ipalias} port = ${pubport} -> ${IPNET}`jailip ${name}` port ${realport}
EOF
            fi
            if [ "xu" == "x${doucarp}" ]; then
                if [ ! -e /usr/local/etc/rc.d/ucarp${name} ]; then
                    cat /usr/local/etc/rc.d/ucarp \
                    | sed "s;ucarp;ucarp${name};g" >/usr/local/etc/rc.d/ucarp${name}
                    chmod 755 /usr/local/etc/rc.d/ucarp${name}
                fi
                if [ ! -e /usr/local/sbin/ucarp${name} ]; then
                    ln /usr/local/sbin/ucarp /usr/local/sbin/ucarp${name}
                fi
                if [ ! -e /etc/rc.conf.d/ucarp${name} ]; then
                    cat >/etc/rc.conf.d/ucarp${name}.tmp <<EOF
ucarp_enable="YES"
ucarp_addr="${ipalias}"
ucarp_if="${HOSTNIC}"
ucarp_src="${HOSTIP}"
ucarp_upscript="/usr/local/sbin/ucarp-up"
ucarp_downscript="/usr/local/sbin/ucarp-down"
ucarp_pass="${name}"
# ucarp_passfile="/usr/local/etc/ucarp${name}password"
# primary   ucarp_preempt="YES"
# primary   ucarp_advskew="100"
# secondary ucarp_advskew="200"
EOF
                    sed "s/ucarp_/ucarp${name}_/g" /etc/rc.conf.d/ucarp${name}.tmp >/etc/rc.conf.d/ucarp${name}
                    rm /etc/rc.conf.d/ucarp${name}.tmp
                fi
                service ucarp${name} onestatus >/dev/null 2>/dev/null || service ucarp${name} start
            fi
        fi
        #echo "debug after if name ${name}"
    done
    gdf
    pf-anchor clear jails
    pf-anchor load jails
}

jailip() {
    local name
    local num
    # omit ${BAD}
    JAILDATASET="${GOOD} ${DEV} ${BAD}"
    echo "$JAILDATASET" \
        | while read num name ; do
            if [ "x" != "x${num}" ] && [ "x" != "x${name}" ]; then
                #echo "debug: search ${1}, name ${name}"
                if [ "x${1}" == "x${name}" ]; then
                    RESULT=$(( count + num ))
                    #echo "debug: match ${num}, result ${RESULT}"
                    echo "${RESULT}"
                fi
            fi
        done
}

setupnginxconfig() {
    local name=${1}
    local FQDN=${2}
    couchdatabases="movies music wiki"
    otherslashes="couch dtfc piwik owncloud zabbix"
    gitlabpaths="admin assets dashboard explore groups help profile projects s snippets u users"
    tlsconf="/usr/local/etc/nginx/tls.conf"
    proxypass="/usr/local/etc/nginx/proxypass.conf"
    cat >/usr/jails/${name}/usr/local/etc/nginx/sites-enabled/${name} <<EOF
    client_max_body_size 0;
    upstream couchsources {
        server ${IPNET}`jailip couch`:5984;
    }
    upstream dtfcsources {
        server ${IPNET}`jailip dtfc`:8080;
    }
    upstream piwiksources {
        server ${IPNET}`jailip piwik`:443;
    }
    upstream owncloudsources {
        server ${IPNET}`jailip owncloud`:443;
    }
    upstream gitlabsources {
        server ${IPNET}`jailip gitlab`:8080;
    }
    upstream zabbixsources {
        server ${IPNET}`jailip zabbix`:443;
    }
    map \$uri \$redirect_uri {
EOF
    for c in ${couchdatabases} ${otherslashes} ; do
        cat >>/usr/jails/${name}/usr/local/etc/nginx/sites-enabled/${name} <<EOF
        ~^/${c}\$   https://${FQDN}/${c}/;
EOF
    done
    cat >>/usr/jails/${name}/usr/local/etc/nginx/sites-enabled/${name} <<EOF
        ~^/\$         https://${FQDN}/explore;
    }
    server {
        listen   ${IPNET}`jailip nginx`:80 default_server;
        server_name ${FQDN};
        server_name ${IPNET}`jailip nginx`;
        return 302 https://\$host\$request_uri;
    }
    server {
        listen 443 ssl;
        server_name ${FQDN};
        ssl_certificate ssl/ssl.crt;
        ssl_certificate_key ssl/ssl.key;
        include ${tlsconf};
        location ~^/(_session|_replicate|_users) {
            rewrite  /(.*) /\$1 break;
            include ${proxypass};
            proxy_pass http://couchsources;
        }
        location ~^/couch/ {
            rewrite  /couch/(.*) /\$1 break;
            include ${proxypass};
            proxy_pass http://couchsources;
        }
        location  ~^/dtfc/ {
            rewrite /dtfc/(.*) /\$1 break;
            include ${proxypass};
            proxy_pass http://dtfcsources;
        }
        location  ~^/piwik/ {
            rewrite /piwik/(.*) /piwik/\$1 break;
            include ${proxypass};
            proxy_pass https://piwiksources;
        }
        location  ~^/owncloud/ {
            rewrite /owncloud/(.*) /owncloud/\$1 break;
            include ${proxypass};
            proxy_pass https://owncloudsources;
        }
        location  ~^/zabbix/ {
            rewrite /zabbix/(.*) /zabbix/\$1 break;
            include ${proxypass};
            proxy_pass https://zabbixsources;
        }
        location / {
            try_files \$uri \$uri/ @redirect-map;
        }
        location @redirect-map {
            if (\$redirect_uri) {
                return 302 \$redirect_uri;
            }
        }
EOF
    for c in ${couchdatabases} ; do
        cat >>/usr/jails/${name}/usr/local/etc/nginx/sites-enabled/${name} <<EOF
        location  ~^/${c}/ {
            rewrite /${c}/(.*) /${c}/_design/${c}/_rewrite/\$1 break;
            include ${proxypass};
            proxy_pass http://couchsources;
        }
EOF
    done
    for g in ${gitlabpaths} ; do
        cat >>/usr/jails/${name}/usr/local/etc/nginx/sites-enabled/${name} <<EOF
        location  ~^/${g}/ {
            rewrite /${g}/(.*) /${g}/\$1 break;
            include ${proxypass};
            proxy_pass http://gitlabsources;
        }
        location  ~^/${g}\$ {
            rewrite /${g} /${g} break;
            include ${proxypass};
            proxy_pass http://gitlabsources;
        }
EOF
    done
    cat >>/usr/jails/${name}/usr/local/etc/nginx/sites-enabled/${name} <<EOF
    #letfover slashes or more to gitlab
    location  ~^/(.*)/(.*) {
        rewrite /(.*)/(.*) /\$1/\$2 break;
        include ${proxypass};
        proxy_pass http://gitlabsources;
    }
}
EOF
} # end of setupnginxconfig

case ${1} in
    good)
        JAILNAMES="${GOOD}"
        ;;
    bad)
        JAILNAMES="${BAD}"
        ;;
    dev)
        JAILNAMES="${DEV}"
        ;;
    nginx)
        setuppf
        setupnginxconfig nginx ${FQDN}
        exit
        ;;
    *)
        echo "ERROR: $0 [good|bad|dev|nginx]"
        exit 1
        ;;
esac

allowsysvipc() {
    if ! grep 'allow.sysvipc=1' /usr/local/etc/ezjail/${1} >/dev/null ; then
        echo "export jail_${1}_parameters=\"allow.sysvipc=1\"" >>/usr/local/etc/ezjail/${1}
    fi
}

copysslselfcert() {
    if [ "x" != "x${SQUIDIPALIAS}" ]; then
        if ifconfig | grep ${SQUIDIPALIAS} >/dev/null ; then
            cat /usr/jails/squid/usr/local/etc/squid/public.pem >>/usr/jails/${1}/usr/local/share/certs/ca-root-nss.crt
        else
            curl --output /usr/jails/${1}/root/public-${SQUIDIPALIAS}.pem http://${SQUIDIPALIAS}:3127/public.pem
            cat           /usr/jails/${1}/root/public-${SQUIDIPALIAS}.pem >>/usr/jails/${1}/usr/local/share/certs/ca-root-nss.crt
        fi
    else
        cat /usr/jails/squid/usr/local/etc/squid/public.pem >>/usr/jails/${1}/usr/local/share/certs/ca-root-nss.crt
    fi
}



setuppf

echo "$JAILNAMES" \
    | while read num name ; do
    if [ "x" != "x${num}" ] && [ "x" != "x${name}" ]; then
        if [ ! -e /usr/jails/${name} ]; then
            echo "Creating: ${num} ${name}"
            eza create ${name}        "${NIC}|${IPNET}${num}"
            env SQUID=${SQUID} REPOSRC=${REPOSRC} eza-unlink-basejail ${name}
            # this extra fres for cshpkglist
            eza console -f -e "env REPOSRC=${REPOSRC} fres" ${name}
            eza stop ${name}
            zfs snap tank/ezjail/${name}@created
        else
            echo "Updating: ${num} ${name}"
            eza console -f -e "env REPOSRC=${REPOSRC} fres" ${name}
            if [ "squid" != "${name}" ]; then
                eza console -f -e "pkg update" ${name}
                eza console -f -e "pkg upgrade -y" ${name}
            fi
        fi
        # The following case can be in any order
        case ${name} in
            # GOOD JAILNAMES
            squid)
                # based on https://forums.freebsd.org/threads/transparent-proxy-in-jail-with-pf-in-host.42075/
#                cat >>/etc/devfs.rules <<EOF
#[devfsrules_jail=4]
#add include \$devfsrules_hide_all
#add include \$devfsrules_unhide_basic
#add include \$devfsrules_unhide_login
#add path zfs unhide
#add path pf unhide mode 0640 group 100
#EOF
                if [ -e /var/ports ]; then
                    rsync -viaP --exclude work /var/ports/ /usr/jails/${name}/var/ports/
                fi
                eza console -f -e "deploy ${name}" ${name}
                rsync -viaP --exclude work /usr/jails/${name}/var/ports/ /var/ports/
                # easydns-client here to reduce risk of lost/rollbacked config
                eza console -f -e "deploy easydnsclient" ${name}
                # 3127 for public.pem
                cat >/usr/jails/${name}/usr/local/etc/nginx/sites-enabled/${name} <<EOF
server {
    listen   ${IPNET}`jailip squid`:3127 default_server;
    server_name ${IPNET}`jailip squid`;
    location =/public.pem {
        alias /usr/local/etc/squid/public.pem;
    }
    location =/public.pac {
        alias /usr/local/etc/squid/public.pac;
    }
}
EOF
                eza console -f -e "deploy nginx" ${name}
                eza console -f -e sh ${name} <<EOF
su urep -c "/bin/mkdir -p /usr/home/urep/bin"
cp -a /root/bin/fres /usr/home/urep/bin/fres
chown urep /usr/home/urep/bin/fres
su urep -c "/usr/home/urep/bin/fres"
su urep -c "/usr/home/urep/bin/deploy easydnsclient"
EOF
                ;;
            nginx)
                setupnginxconfig ${name} ${FQDN}
                eza console -f -e "deploy ${name}" ${name}
                ;;
            couch)
                eza console -f -e "env FQDN=${FQDN} deploy ${name}db" ${name}
                ;;
            dtfc)
                if [         -d /root/local/gitcache/johnko/dtfc ]; then
                    mkdir -p                                      /usr/jails/${name}/root/local/gitcache/johnko/dtfc
                    rsync -qalP /root/local/gitcache/johnko/dtfc/ /usr/jails/${name}/root/local/gitcache/johnko/dtfc/
                fi
                eza console -f -e "env FQDN=${FQDN} REPOSRC=${REPOSRC} deploy ${name}" ${name}
                ;;
            piwik)
                eza console -f -e "env FQDN=${FQDN} deploy ${name}" ${name}
                ;;
            owncloud)
                if [         -d /root/local/owncloud ]; then
                    mkdir -p                          /usr/jails/${name}/root/local/owncloud
                    rsync -qalP /root/local/owncloud/ /usr/jails/${name}/root/local/owncloud/
                fi
                allowsysvipc ${name}
                eza console -f -e "env FQDN=${FQDN} deploy ${name}" ${name}
                rsync -qalP /usr/jails/${name}/root/local/owncloud/ /root/local/owncloud/
                ;;
            ejabberd)
                eza console -f -e "env FQDN=${FQDN} deploy ${name}" ${name}
                ;;
            murmur)
                eza console -f -e "deploy ${name}" ${name}
                ;;
            vnc)
                eza console -f -e "deploy ${name}" ${name}
                ;;
            gitlab)
                allowsysvipc ${name}
                copysslselfcert ${name}
                if [         -d /root/local/gitcache/gitlab-org/gitlab-ce.git ]; then
                    mkdir -p                                                   /usr/jails/${name}/root/local/gitcache/gitlab-org/gitlab-ce.git
                    rsync -qalP /root/local/gitcache/gitlab-org/gitlab-ce.git/ /usr/jails/${name}/root/local/gitcache/gitlab-org/gitlab-ce.git/
                fi
                if ifconfig | grep ${WEBIPALIAS} >/dev/null ; then
                    # Set jailip nginx as FQDN
                    grep -v " ${FQDN}" /usr/jails/${name}/etc/hosts >/usr/jails/${name}/etc/hosts.tmp
                    cat /usr/jails/${name}/etc/hosts.tmp >/usr/jails/${name}/etc/hosts
                    echo "${IPNET}`jailip nginx` ${FQDN}" >>/usr/jails/${name}/etc/hosts
                    rm  /usr/jails/${name}/etc/hosts.tmp
                fi
                eza console -f -e "env FQDN=${FQDN} GITLABSRC=${GITLABSRC} HTTP_PROXY=http://${SQUID} deploy ${name}_src" ${name}
                ;;
            # DEV JAILNAMES
            monit)
                eza console -f -e "deploy ${name}" ${name}
                ;;
            zabbix)
                eza console -f -e "deploy ${name}" ${name}
                ;;
            minidlna)
                eza console -f -e "deploy ${name}" ${name}
                ;;
            firefly)
                eza console -f -e "deploy ${name}" ${name}
                ;;
            echoplexus)
                if [         -d /root/local/gitcache/qq99/echoplexus ]; then
                    mkdir -p                                          /usr/jails/${name}/root/local/gitcache/qq99/echoplexus
                    rsync -qalP /root/local/gitcache/qq99/echoplexus/ /usr/jails/${name}/root/local/gitcache/qq99/echoplexus/
                fi
                eza console -f -e "env REPOSRC=${REPOSRC} deploy ${name}" ${name}
                ;;
            gitannex)
                eza console -f -e "deploy ${name}" ${name}
                ;;
            gogs)
                eza console -f -e "deploy ${name}_src" ${name}
                ;;
            phabricator)
                eza console -f -e "deploy ${name}" ${name}
                ;;
            pydio)
                eza console -f -e "deploy ${name}" ${name}
                ;;
            # BAD JAILNAMES
            baikal)
                eza console -f -e "env FQDN=${FQDN} deploy ${name}" ${name}
                ;;
            couchdtfc)
                if [         -d /root/local/gitcache/johnko/dtfc ]; then
                    mkdir -p                                      /usr/jails/${name}/root/local/gitcache/johnko/dtfc
                    rsync -qalP /root/local/gitcache/johnko/dtfc/ /usr/jails/${name}/root/local/gitcache/johnko/dtfc/
                fi
                eza console -f -e "env FQDN=${FQDN} REPOSRC=${REPOSRC} deploy couchdbdtfc" ${name}
                ;;
            horde)
                allowsysvipc ${name}
                eza console -f -e "env FQDN=${FQDN} deploy ${name}webmail" ${name}
                ;;
        esac
        if [ "xsquid" != "x${name}" ]; then
            eza stop ${name}
        fi
    fi # end of if [ "x" != "x${num}" ] && [ "x" != "x${name}" ]; then
done
